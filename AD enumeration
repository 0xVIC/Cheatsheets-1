https://adsecurity.org/
https://bitvijays.github.io/LFF-IPS-P3-Exploitation.html
Hacking Windows: Ataques a sistemas y redes microsoft 
https://specterops.io/ 

/////////////CMD/POWERSHELL/////////////

+Dominio
echo %USERDOMAIN%
echo %USERDNSDOMAIN%

+Controlador de Dominio
echo %logonserver%
set logonserver
set log

+Lista de grupos existentes en el Dominio
net groups /domain

+Lista equipos conectados al dominio ("Equipos del dominio" se llama en español el grupo)
net group "domain computers" /domain

+Lista de equipos en el dominio
net view /domain

+Lista de DCs en el dominio
nltest /dclist:DOMINIO

+Lista de cuentas de equipo de DCs ("Controladores de dominio")
net group "Domain Admins" /domain

+Lista de Domain Admins ("Admins. del dominio")
net group "Domain Admins" /domain

+Lista de administrators (usuario por defecto en AD) ("administradores")
net localgroup administrators /domain

+ Shares
net share \\hostname

+Lista usuarios del dominio actual
net user /domain

+Informacion de una cuenta de dominio
net user Usuario /domain

+Política de contraseñas
net accounts /domain

+Relaciones de confianza
nltest /domain_trusts

+ Forest information
[System.DirectoryServices.ActiveDirectory.Forest]::GetCurrentForest()

+ Domain information
[System.DirectoryServices.ActiveDirectory.Domain]::GetCurrentDomain()
echo (Get-WmiObject win32_computersystem).Domain
ping server2012dc

+ Forest trusts
$ForestRootDomain = ‘lab.adsecurity.org’
([System.DirectoryServices.ActiveDirectory.Forest]::GetForest((New-Object System.DirectoryServices.ActiveDirectory.DirectoryContext(‘Forest’, $ForestRootDomain)))).GetAllTrustRelationships()

+ Domain trusts
([System.DirectoryServices.ActiveDirectory.Domain]::GetCurrentDomain()).GetAllTrustRelationships()

+ Forest Global Catalogs (typically every Domain Controller is algo a GC)
[System.DirectoryServices.ActiveDirectory.Forest]::GetCurrentForest().GlobalCatalogs

+ Enterprise services (SPN scanning) → pregunta al DC por todos los Service Principal Names de un tipo específico. Con esto podemos encontrar los SQL Servers, Exchange servers, ordenadores con RDP (TERMSERV), WinRM (WSMAN)...
get-adcomputer -filter {ServicePrincipalName -like “*TERMSRV*”} -Properties OperatingSystem,OperatingSystemVersion,OperatingSystemServicePack, PasswordLastSet,LastLogonDate,ServicePrincipalName,TrustedForDelegation,TrustedtoAuthForDelegation



/////////////POWERVIEW/////////////

$pass = ConvertTo-SecureString 'passMuGuapa' -AsPlainText -Force
$cred = New-Object System.Management.Automation.PSCredential ("Dominio\usuario", $pass)

+ Listar usuarios e información
Get-NetUser -Domain testing # obtener usuarios del dominio indicado
Get-NetUser -Credential $cred -DomainController dc.host.local # obtener usuarios del dominio con las credenciales y DC indicados
Get-NetUser -ADSpath "LDAP://OU=secret,DC=testlab,DC=local 
get-netuser -Credential $cred -DomainController dc.host.local Carlos
get-netuser -Credential $cred -DomainController dc.host.local | select samAccountName, logoncount, lastlogon  

+ Listar equipos y servidores del dominio (incluso no online)
Get-NetComputer # maquinas del dominio actual
Get-NetComputer -SPN mssql* # servidores mssql del dominio actual
Get-NetComputer -Domain testing # maquinas en el dominio indicado
Get-NetComputer -Domain testing -FullData # devuelve los objetos completos de las maquinas en el dominio indicado

+ Obtener shares 
Get-NetShare -ComputerName sqlserver # buscar shares en la máquina indicada
Get-NetComputer | Get-NetShare # buscar shares en todas las máquinas del dominio
Find-DomainShare -CheckShareAccess | fl | Out-File domain-shares.txt

+ Obtener miembros locales de un equipo remoto
Get-NetLocalGroup # usuarios admin locales
Get-NetLocalGroup -ComputerName WINDOWSXP # usuarios admin locales de la maquina indicada
Get-NetLocalGroup -ComputerName WINDOWS7 -ListGroups # grupos locales de la maquina indicada
Get-NetLocalGroup -ComputerName WINDOWS7 -Recurse # usuarios locales/dominio que pueden acceder a la maquina W7 con privilegios admin locales

+ Añadir usuario local/dominio a un grupo local/dominio
Add-NetGroupUser -UserName john -GroupName Administrators # añade el usuario especificado al grupo local especificado
Add-NetGroupUser -UserName john -GroupName "Domain Admins" -Domain dev.local # añade al usuario especificado al grupo espeficiado en el dominio espeficiado

+ Obtener usuarios con sesión iniciada en una máquina
Get-NetLoggedOn # usuarios logeados en la máquina local
Get-NetLoggedon -ComputerName sqlserver # usuarios logeados en la máquina especificada
Get-NetComputer | Get-NetLoggedon # usuarios logeados en todas las máquinas del dominio

+ Sesiones de red activas en equipo remoto
Get-NetSession # sesiones activas en la máquina local
Get-NetSession -ComputerName sqlserver # sesiones activas en la máquina indicada
Get-NetDomainController | Get-NetSession # sesiones activas en todos los DCs

+ Sesiones RDP activas en equipo remoto
Get-NetRDPSession # sesiones RDP activas en máquina local
Get-NetRDPSession -ComputerName "sqlserver" # sesiones RDP activas en la máquina indicada
Get-NetDomainController | Get-NetRDPSession # sesiones RDP activas en todos los DCs

+ Listar usuarios y grupos que tienen permisos de administrador en equipo repoto
Find-GPOComputerAdmin -ComputerName WINDOWS3.dev.testlab.local # buscar usuarios con privs de admin local en la máquina indicada a través de GPO
Find-GPOComputerAdmin -ComputerName WINDOWS3.dev.testlab.local -LocalGroup RDP # buscar usuarios con privs de RDP en la máquina indicada a través de GPO 

+ Buscar equipos del dominio donde el usuario actual sea administrador
Find-LocalAdminAccess # buscar máquinas donde el usuario local tenga permisos admin
Find-LocalAdminAccess -Threads 10 # multithread
Find-LocalAdminAccess -Domain testing # en el dominio indicado
Find-LocalAdminAccess -ComputerFile hosts.txt # buscar en las máquinas indicadas en el .txt

+ Buscar equipos del dominio en los que haya sesión iniciada de Domain Admins (u otro grupo especificado)
Invoke-UserHunter -CheckAccess # buscar máquinas en el dominio donde haya Domain Admins logeados y comprobar si el usuario actual tiene acceso como admin local a dichas máquinas
Invoke-UserHunter -Domain 'testing' # buscar máquinas en el dominio indicado donde haya Domain Admins logeados
Invoke-UserHunter -Threads 20 # multithread
Invoke-UserHunter -UserFile users.txt -ComputerFile hosts.txt # buscar en las máquinas indicadas si los usuarios indicados están logeados o tienen sesión activa
Invoke-UserHunter -SearchForest # buscar Domain Admins logeados en el forest actual

